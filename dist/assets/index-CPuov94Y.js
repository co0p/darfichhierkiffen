(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function t(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(r){if(r.ep)return;r.ep=!0;const n=t(r);fetch(r.href,n)}})();const I=(o,e,t,i)=>`[out:json][timeout:25];
( 
  nwr["amenity"="school"](${o}, ${e}, ${t}, ${i});
  nwr["amenity"="kindergarden"](${o}, ${e}, ${t}, ${i});
  nwr["community_centre"="youth_centre"](${o}, ${e}, ${t}, ${i});
  nwr["leisure"="playground"](${o}, ${e}, ${t}, ${i});
);
out geom;`,y="https://overpass-api.de/api/interpreter",v=(o,e,t,i)=>{const r=new URLSearchParams;return r.append("data",I(o,e,t,i)),fetch(y,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded;charset=UTF-8"},body:r})},T=()=>new Promise((o,e)=>{navigator.geolocation.getCurrentPosition(t=>{o(t.coords)},e)});var $=Object.prototype.toString,P=Math.PI/180,R=180/Math.PI,A=1.6093439999999999,D=.621371192237334,w=6371.01,M=3958.762079,f=Math.PI/2,m=-f,g=Math.PI,p=-g,_=Math.PI*2;function a(o){return $.call(o)==="[object Number]"&&o===+o}class h{constructor(e,t,i){if(!a(e))throw new Error("Invalid latitude");if(!a(t))throw new Error("Invalid longitude");if(i===!0?(this._degLat=this.radiansToDegrees(e),this._degLon=this.radiansToDegrees(t),this._radLat=e,this._radLon=t):(this._degLat=e,this._degLon=t,this._radLat=this.degreesToRadians(e),this._radLon=this.degreesToRadians(t)),this._radLat<m||this._radLat>f)throw new Error("Latitude out of bounds");if(this._radLon<p||this._radLon>g)throw new Error("Longitude out of bounds")}latitude(e){return e===!0?this._radLat:this._degLat}longitude(e){return e===!0?this._radLon:this._degLon}distanceTo(e,t){if(!(e instanceof h))throw new Error("Invalid GeoPoint");var i=t===!0?w:M,r=this.latitude(!0),n=e.latitude(!0),s=this.longitude(!0),d=e.longitude(!0);return Math.acos(Math.sin(r)*Math.sin(n)+Math.cos(r)*Math.cos(n)*Math.cos(s-d))*i}boundingCoordinates(e,t,i){if(!a(e)||e<=0)throw new Error("Invalid distance");(t===!0||t===!1)&&(i=t,t=null),(!a(t)||t<=0)&&(t=i===!0?w:M);var r=this.latitude(!0),n=this.longitude(!0),s=e/t,d=r-s,l=r+s,u,c,L;return d>m&&l<f?(L=Math.asin(Math.sin(s)/Math.cos(r)),u=n-L,u<p&&(u+=_),c=n+L,c>g&&(c-=_)):(d=Math.max(d,m),l=Math.min(l,f),u=p,c=g),[new h(d,u,!0),new h(l,c,!0)]}degreesToRadians(e){if(!a(e))throw new Error("Invalid degree value");return e*P}radiansToDegrees(e){if(!a(e))throw new Error("Invalid radian value");return e*R}milesToKilometers(e){if(!a(e))throw new Error("Invalid mile value");return e*A}kilometersToMiles(e){if(!a(e))throw new Error("Invalid kilometer value");return e*D}}document.querySelector("#app").innerHTML=`<section class="section">
<div class="container">
  <h1 class="title">
    Darf Ich Hier Kiffen?
            </h1>
  <p class="subtitle">
    Is is legal to smoke canabis?
  </p>
</div>
</section>`;T().then(o=>{const e=new h(o.latitude,o.longitude),t=e.boundingCoordinates(.3,!0,!0);return console.log(e,t),[t[0].latitude(),t[0].longitude(),t[1].latitude(),t[1].longitude()]}).then(o=>{v(o[0],o[1],o[2],o[3]).then(e=>console.log(e.json()))});
